package ru.maksimka.jb.ui.bot.Handlers;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import ru.maksimka.jb.ui.bot.Handler;

import java.util.Map;

import static ru.maksimka.jb.configurations.SpringContextSingleton.getContext;

@Service
public class AllTheRestHandlers implements Handler {

    private static final Logger LOGGER = LogManager.getLogger("BOT INFO");

    @Autowired
    @Qualifier("simpleAnswers")
    private Map<String, String> mapResponses;

    @Autowired
    @Qualifier("start")
    private InlineKeyboardMarkup keyboard;

    @Override
    public SendMessage execute(Update update) {

        long chatId;
        String message;
        if (update.hasCallbackQuery()) {
            message = update
                    .getCallbackQuery()
                    .getData()
                    .trim()
                    .toLowerCase();

            chatId = update.getCallbackQuery().getMessage().getChatId();
        } else {
            message = update
                    .getMessage()
                    .getText()
                    .trim()
                    .toLowerCase();
            chatId = update.getMessage().getChatId();
        }

        LOGGER.info("–ü—Ä–∏—à—ë–ª –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –±–æ—Ç—É, chatId:" + chatId
                + "\n------------------------] " + "–¢–µ–∫—Å—Ç: " + message);

        if (message.equals(START)) {
            keyboard = getContext().getBean( "startKeyboard", InlineKeyboardMarkup.class);
            return new SendMessage()
                    .setChatId(chatId)
                    .setText("–û–∫–µ–π, –∂–º–∞–∫–∞–π –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π! üëá")
                    .setReplyMarkup(keyboard);
        } else if (message.equals(EXIT)){
            return new SendMessage()
                    .setChatId(chatId)
                    .setText("–ü–æ–∫–∞ —á–µ–ª–æ–≤–µ–∫...—Ç—ã —ç—Ç–æ, –∑–∞—Ö–æ–¥–∏ –µ—Å–ª–∏ —á—Ç–æ! üëã");
        }else if (!mapResponses.containsKey(message)) {
            return new SendMessage()
                    .setChatId(chatId)
                    .setText("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é....–∂–º–∏ –¥–∞–≤–∞–π —á—Ç–æ –Ω–∏–±—É–¥—å —É–∂–µ")
                    .setReplyMarkup(keyboard);
        } else {
            return new SendMessage()
                    .setChatId(chatId)
                    .setText(mapResponses.get(message))
                    .setReplyMarkup(keyboard);
        }
    }
}

